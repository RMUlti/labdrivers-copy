import ctypes
import numpy as np
from ctypes import *

class Rotator:
    def __init__(self):
        self.rotator = ctypes.WinDLL(
            "C:/ProgramData/Anaconda3/Lib/site-packages/labdrivers/funky_rotator/WJ_API.dll"
        )
        self.rotator.WJ_Close.restype = c_int32

        self.rotator.WJ_Open.restype = c_int32
        self.rotator.WJ_Open.argtypes = [c_int32]

        self.rotator.WJ_Get_Axes_Pulses.argtypes = [ctypes.POINTER(c_int32 * 4)]
        self.rotator.WJ_Get_Axes_Pulses.restype = c_int32

        self.rotator.WJ_Move_Axis_Pulses.argtypes = [c_int32, c_int32]

        self.rotator.WJ_Get_Axis_Status.restype = c_int32
        self.rotator.WJ_Get_Axis_Status.argtypes = [c_int32, ctypes.POINTER(c_int32 * 1)]

        self.pulse = (c_int32 * 4)()
        self.moving = (c_int32 * 1)()
        self.axis = 1

        self.rotator.WJ_Close()
        self.rotator.WJ_Open(0)
        self.rotator.WJ_Get_Axes_Pulses(self.pulse)

    def Move_Angle(self, degree):
        round(degree * 50000 / 360) + list(self.pulse)[0]
        if (degree >= 0) and (degree <= 360):
            pchange = round(degree * 50000 / 360) - list(self.pulse)[0]
            self.rotator.WJ_Move_Axis_Pulses(self.axis, pchange)
        else:
            print("!!!Angle must be between 0 and 360!!!")

    def Read_Status(self):
        self.rotator.WJ_Get_Axes_Pulses(self.pulse)
        self.rotator.WJ_Get_Axis_Status(self.axis, self.moving)
        return round(list(self.pulse)[0] * 360 / 50000, 2), self.moving[0]
        
    """ def Set_Angle(degree, axis=1):
        rotator.WJ_Move_Axis_Pulses.argtypes = [c_int32, c_int32]
        pulses = int(degree * 50004 / 360)
        rotator.WJ_Move_Axis_Pulses(1, pulses)

    def Read_Angle(axis=1):
        rotator.WJ_Get_Axes_Pulses.argtypes = [ctypes.POINTER(c_long)]
        rotator.WJ_Get_Axes_Pulses.restype = c_long
        pulse_val = (c_long * 4)()
        rotator.WJ_Get_Axes_Pulses(pulse_val)
        pulse_vals = list(pulse_val)
        return np.array(pulse_vals)[0] * 360 / 50004
 """
